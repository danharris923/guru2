{"ast":null,"code":"import _objectSpread from\"C:/Users/dan/Desktop/guru2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Custom hook for loading and managing deals data.\n * Handles loading from /deals.json with error handling and retry logic.\n */import{useState,useEffect,useCallback}from'react';import{DATA_CONFIG,ERROR_MESSAGES}from'../utils/constants';import{validateDeal}from'../utils/dealUtils';export function useDeals(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const[state,setState]=useState({deals:[],loading:true,error:null,selectedDeal:null});const loadDeals=useCallback(async function(){let retryCount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;try{setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:true,error:null}));const response=await fetch(DATA_CONFIG.DEALS_FILE_PATH);if(!response.ok){throw new Error(\"HTTP \".concat(response.status,\": Failed to load deals\"));}const data=await response.json();// Validate the data structure\nif(!Array.isArray(data)){throw new Error('Invalid data format: expected array of deals');}// Validate and filter deals\nconst validDeals=data.filter(item=>{if(!validateDeal(item)){console.warn('Invalid deal data:',item);return false;}return true;}).map(item=>_objectSpread(_objectSpread({},item),{},{// Ensure all required fields have default values\ndiscountPercent:item.discountPercent||undefined,originalPrice:item.originalPrice||undefined}));setState(prev=>_objectSpread(_objectSpread({},prev),{},{deals:validDeals,loading:false,error:null}));console.log(\"Loaded \".concat(validDeals.length,\" valid deals\"));}catch(error){console.error('Error loading deals:',error);// Retry logic\nif(retryCount<DATA_CONFIG.MAX_RETRIES){console.log(\"Retrying... (\".concat(retryCount+1,\"/\").concat(DATA_CONFIG.MAX_RETRIES,\")\"));setTimeout(()=>{loadDeals(retryCount+1);},DATA_CONFIG.RETRY_DELAY*(retryCount+1));return;}// Set error state after max retries\nlet errorMessage=ERROR_MESSAGES.LOAD_FAILED;if(error instanceof Error){if(error.message.includes('404')){errorMessage=ERROR_MESSAGES.NO_DEALS;}else if(error.message.includes('network')||error.name==='TypeError'){errorMessage=ERROR_MESSAGES.NETWORK_ERROR;}}setState(prev=>_objectSpread(_objectSpread({},prev),{},{loading:false,error:errorMessage}));}},[]);// Initial load\nuseEffect(()=>{loadDeals();},[loadDeals]);// Auto-refresh setup\nuseEffect(()=>{if(!options.autoRefresh)return;const interval=setInterval(()=>{loadDeals();},options.refreshInterval||DATA_CONFIG.REFRESH_INTERVAL);return()=>clearInterval(interval);},[loadDeals,options.autoRefresh,options.refreshInterval]);// Deal selection methods\nconst selectDeal=useCallback(deal=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{selectedDeal:deal}));},[]);const clearSelection=useCallback(()=>{setState(prev=>_objectSpread(_objectSpread({},prev),{},{selectedDeal:null}));},[]);// Manual refresh\nconst refresh=useCallback(()=>{loadDeals();},[loadDeals]);return _objectSpread(_objectSpread({},state),{},{selectDeal,clearSelection,refresh,isRefreshing:state.loading&&state.deals.length>0});}","map":{"version":3,"names":["useState","useEffect","useCallback","DATA_CONFIG","ERROR_MESSAGES","validateDeal","useDeals","options","arguments","length","undefined","state","setState","deals","loading","error","selectedDeal","loadDeals","retryCount","prev","_objectSpread","response","fetch","DEALS_FILE_PATH","ok","Error","concat","status","data","json","Array","isArray","validDeals","filter","item","console","warn","map","discountPercent","originalPrice","log","MAX_RETRIES","setTimeout","RETRY_DELAY","errorMessage","LOAD_FAILED","message","includes","NO_DEALS","name","NETWORK_ERROR","autoRefresh","interval","setInterval","refreshInterval","REFRESH_INTERVAL","clearInterval","selectDeal","deal","clearSelection","refresh","isRefreshing"],"sources":["C:/Users/dan/Desktop/guru2/src/hooks/useDeals.ts"],"sourcesContent":["/**\n * Custom hook for loading and managing deals data.\n * Handles loading from /deals.json with error handling and retry logic.\n */\n\nimport { useState, useEffect, useCallback } from 'react';\nimport { Deal, DealsState } from '../types/Deal';\nimport { DATA_CONFIG, ERROR_MESSAGES } from '../utils/constants';\nimport { validateDeal } from '../utils/dealUtils';\n\ninterface UseDealOptions {\n  autoRefresh?: boolean;\n  refreshInterval?: number;\n}\n\nexport function useDeals(options: UseDealOptions = {}) {\n  const [state, setState] = useState<DealsState>({\n    deals: [],\n    loading: true,\n    error: null,\n    selectedDeal: null,\n  });\n\n  const loadDeals = useCallback(async (retryCount = 0): Promise<void> => {\n    try {\n      setState(prev => ({ ...prev, loading: true, error: null }));\n\n      const response = await fetch(DATA_CONFIG.DEALS_FILE_PATH);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: Failed to load deals`);\n      }\n\n      const data = await response.json();\n\n      // Validate the data structure\n      if (!Array.isArray(data)) {\n        throw new Error('Invalid data format: expected array of deals');\n      }\n\n      // Validate and filter deals\n      const validDeals: Deal[] = data\n        .filter((item: any) => {\n          if (!validateDeal(item)) {\n            console.warn('Invalid deal data:', item);\n            return false;\n          }\n          return true;\n        })\n        .map((item: any): Deal => ({\n          ...item,\n          // Ensure all required fields have default values\n          discountPercent: item.discountPercent || undefined,\n          originalPrice: item.originalPrice || undefined,\n        }));\n\n      setState(prev => ({\n        ...prev,\n        deals: validDeals,\n        loading: false,\n        error: null,\n      }));\n\n      console.log(`Loaded ${validDeals.length} valid deals`);\n\n    } catch (error) {\n      console.error('Error loading deals:', error);\n\n      // Retry logic\n      if (retryCount < DATA_CONFIG.MAX_RETRIES) {\n        console.log(`Retrying... (${retryCount + 1}/${DATA_CONFIG.MAX_RETRIES})`);\n        setTimeout(() => {\n          loadDeals(retryCount + 1);\n        }, DATA_CONFIG.RETRY_DELAY * (retryCount + 1));\n        return;\n      }\n\n      // Set error state after max retries\n      let errorMessage: string = ERROR_MESSAGES.LOAD_FAILED;\n      \n      if (error instanceof Error) {\n        if (error.message.includes('404')) {\n          errorMessage = ERROR_MESSAGES.NO_DEALS;\n        } else if (error.message.includes('network') || error.name === 'TypeError') {\n          errorMessage = ERROR_MESSAGES.NETWORK_ERROR;\n        }\n      }\n\n      setState(prev => ({\n        ...prev,\n        loading: false,\n        error: errorMessage,\n      }));\n    }\n  }, []);\n\n  // Initial load\n  useEffect(() => {\n    loadDeals();\n  }, [loadDeals]);\n\n  // Auto-refresh setup\n  useEffect(() => {\n    if (!options.autoRefresh) return;\n\n    const interval = setInterval(() => {\n      loadDeals();\n    }, options.refreshInterval || DATA_CONFIG.REFRESH_INTERVAL);\n\n    return () => clearInterval(interval);\n  }, [loadDeals, options.autoRefresh, options.refreshInterval]);\n\n  // Deal selection methods\n  const selectDeal = useCallback((deal: Deal | null) => {\n    setState(prev => ({ ...prev, selectedDeal: deal }));\n  }, []);\n\n  const clearSelection = useCallback(() => {\n    setState(prev => ({ ...prev, selectedDeal: null }));\n  }, []);\n\n  // Manual refresh\n  const refresh = useCallback(() => {\n    loadDeals();\n  }, [loadDeals]);\n\n  return {\n    ...state,\n    selectDeal,\n    clearSelection,\n    refresh,\n    isRefreshing: state.loading && state.deals.length > 0,\n  };\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}