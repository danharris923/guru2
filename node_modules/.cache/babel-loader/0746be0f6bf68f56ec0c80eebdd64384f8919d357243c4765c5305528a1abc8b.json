{"ast":null,"code":"/**\n * Utility functions for deal data processing and formatting.\n * Handles price formatting, discount calculations, and data sorting.\n *//**\n * Format price in Canadian dollars\n */export function formatPrice(price){return new Intl.NumberFormat('en-CA',{style:'currency',currency:'CAD',minimumFractionDigits:2,maximumFractionDigits:2}).format(price);}/**\n * Format price without currency symbol (for compact display)\n */export function formatPriceCompact(price){return price.toFixed(2);}/**\n * Calculate discount percentage between original and current price\n */export function calculateDiscountPercent(originalPrice,currentPrice){if(originalPrice<=0||currentPrice<=0||currentPrice>=originalPrice){return 0;}return Math.round((originalPrice-currentPrice)/originalPrice*100);}/**\n * Calculate savings amount in dollars\n */export function calculateSavings(originalPrice,currentPrice){if(!originalPrice||!currentPrice||currentPrice>=originalPrice){return 0;}return originalPrice-currentPrice;}/**\n * Format date for display (relative time)\n */export function formatDateAdded(dateAdded){try{const date=new Date(dateAdded);const now=new Date();const diffInHours=(now.getTime()-date.getTime())/(1000*60*60);if(diffInHours<1){return'Just added';}else if(diffInHours<24){return\"\".concat(Math.floor(diffInHours),\" hours ago\");}else if(diffInHours<48){return'Yesterday';}else{return date.toLocaleDateString('en-CA',{month:'short',day:'numeric'});}}catch(error){return'Recently';}}/**\n * Sort deals based on provided options\n */export function sortDeals(deals,sortOptions){return[...deals].sort((a,b)=>{let aValue;let bValue;switch(sortOptions.field){case'price':aValue=a.price;bValue=b.price;break;case'discountPercent':aValue=a.discountPercent||0;bValue=b.discountPercent||0;break;case'dateAdded':aValue=new Date(a.dateAdded).getTime();bValue=new Date(b.dateAdded).getTime();break;case'title':aValue=a.title.toLowerCase();bValue=b.title.toLowerCase();break;default:return 0;}if(sortOptions.direction==='desc'){return bValue>aValue?1:bValue<aValue?-1:0;}else{return aValue>bValue?1:aValue<bValue?-1:0;}});}/**\n * Filter deals based on category\n */export function filterDealsByCategory(deals,category){if(!category||category==='All'){return deals;}return deals.filter(deal=>deal.category===category);}/**\n * Filter deals by minimum discount percentage\n */export function filterDealsByDiscount(deals,minDiscount){return deals.filter(deal=>(deal.discountPercent||0)>=minDiscount);}/**\n * Get unique categories from deals\n */export function getUniqueCategories(deals){const categories=new Set(deals.map(deal=>deal.category));return['All',...Array.from(categories).sort()];}/**\n * Get featured deals (marked as featured or high discount)\n */export function getFeaturedDeals(deals){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;// First get explicitly featured deals\nconst featured=deals.filter(deal=>deal.featured);if(featured.length>=limit){return featured.slice(0,limit);}// If not enough featured deals, add high-discount deals\nconst nonFeatured=deals.filter(deal=>!deal.featured).filter(deal=>(deal.discountPercent||0)>=30).sort((a,b)=>(b.discountPercent||0)-(a.discountPercent||0));return[...featured,...nonFeatured].slice(0,limit);}/**\n * Truncate text to specified length\n */export function truncateText(text,maxLength){if(text.length<=maxLength){return text;}return text.slice(0,maxLength-3)+'...';}/**\n * Get color class for deal card background\n */export function getDealCardColor(index){const colors=['bg-pink-100 border-pink-200','bg-blue-100 border-blue-200','bg-yellow-100 border-yellow-200'];return colors[index%colors.length];}/**\n * Check if a deal has a significant discount\n */export function hasSignificantDiscount(deal){let threshold=arguments.length>1&&arguments[1]!==undefined?arguments[1]:20;return(deal.discountPercent||0)>=threshold;}/**\n * Get discount badge color based on percentage\n */export function getDiscountBadgeColor(discountPercent){if(discountPercent>=50){return'bg-red-600 text-white';}else if(discountPercent>=30){return'bg-red-500 text-white';}else if(discountPercent>=15){return'bg-orange-500 text-white';}else{return'bg-gray-500 text-white';}}/**\n * Validate deal data structure\n */export function validateDeal(deal){return typeof(deal===null||deal===void 0?void 0:deal.id)==='string'&&typeof(deal===null||deal===void 0?void 0:deal.title)==='string'&&typeof(deal===null||deal===void 0?void 0:deal.price)==='number'&&deal.price>0&&typeof(deal===null||deal===void 0?void 0:deal.affiliateUrl)==='string'&&['PAAPI','SCRAPED','FALLBACK'].includes(deal===null||deal===void 0?void 0:deal.dataSource);}/**\n * Search deals by title or description\n */export function searchDeals(deals,searchTerm){if(!searchTerm.trim()){return deals;}const term=searchTerm.toLowerCase().trim();return deals.filter(deal=>deal.title.toLowerCase().includes(term)||deal.description.toLowerCase().includes(term)||deal.category.toLowerCase().includes(term));}","map":{"version":3,"names":["formatPrice","price","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatPriceCompact","toFixed","calculateDiscountPercent","originalPrice","currentPrice","Math","round","calculateSavings","formatDateAdded","dateAdded","date","Date","now","diffInHours","getTime","concat","floor","toLocaleDateString","month","day","error","sortDeals","deals","sortOptions","sort","a","b","aValue","bValue","field","discountPercent","title","toLowerCase","direction","filterDealsByCategory","category","filter","deal","filterDealsByDiscount","minDiscount","getUniqueCategories","categories","Set","map","Array","from","getFeaturedDeals","limit","arguments","length","undefined","featured","slice","nonFeatured","truncateText","text","maxLength","getDealCardColor","index","colors","hasSignificantDiscount","threshold","getDiscountBadgeColor","validateDeal","id","affiliateUrl","includes","dataSource","searchDeals","searchTerm","trim","term","description"],"sources":["C:/Users/dan/Desktop/guru2/src/utils/dealUtils.ts"],"sourcesContent":["/**\n * Utility functions for deal data processing and formatting.\n * Handles price formatting, discount calculations, and data sorting.\n */\n\nimport { Deal, SortOptions } from '../types/Deal';\n\n/**\n * Format price in Canadian dollars\n */\nexport function formatPrice(price: number): string {\n  return new Intl.NumberFormat('en-CA', {\n    style: 'currency',\n    currency: 'CAD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  }).format(price);\n}\n\n/**\n * Format price without currency symbol (for compact display)\n */\nexport function formatPriceCompact(price: number): string {\n  return price.toFixed(2);\n}\n\n/**\n * Calculate discount percentage between original and current price\n */\nexport function calculateDiscountPercent(originalPrice: number, currentPrice: number): number {\n  if (originalPrice <= 0 || currentPrice <= 0 || currentPrice >= originalPrice) {\n    return 0;\n  }\n  \n  return Math.round(((originalPrice - currentPrice) / originalPrice) * 100);\n}\n\n/**\n * Calculate savings amount in dollars\n */\nexport function calculateSavings(originalPrice?: number, currentPrice?: number): number {\n  if (!originalPrice || !currentPrice || currentPrice >= originalPrice) {\n    return 0;\n  }\n  \n  return originalPrice - currentPrice;\n}\n\n/**\n * Format date for display (relative time)\n */\nexport function formatDateAdded(dateAdded: string): string {\n  try {\n    const date = new Date(dateAdded);\n    const now = new Date();\n    const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60);\n    \n    if (diffInHours < 1) {\n      return 'Just added';\n    } else if (diffInHours < 24) {\n      return `${Math.floor(diffInHours)} hours ago`;\n    } else if (diffInHours < 48) {\n      return 'Yesterday';\n    } else {\n      return date.toLocaleDateString('en-CA', { \n        month: 'short', \n        day: 'numeric' \n      });\n    }\n  } catch (error) {\n    return 'Recently';\n  }\n}\n\n/**\n * Sort deals based on provided options\n */\nexport function sortDeals(deals: Deal[], sortOptions: SortOptions): Deal[] {\n  return [...deals].sort((a, b) => {\n    let aValue: any;\n    let bValue: any;\n    \n    switch (sortOptions.field) {\n      case 'price':\n        aValue = a.price;\n        bValue = b.price;\n        break;\n      case 'discountPercent':\n        aValue = a.discountPercent || 0;\n        bValue = b.discountPercent || 0;\n        break;\n      case 'dateAdded':\n        aValue = new Date(a.dateAdded).getTime();\n        bValue = new Date(b.dateAdded).getTime();\n        break;\n      case 'title':\n        aValue = a.title.toLowerCase();\n        bValue = b.title.toLowerCase();\n        break;\n      default:\n        return 0;\n    }\n    \n    if (sortOptions.direction === 'desc') {\n      return bValue > aValue ? 1 : bValue < aValue ? -1 : 0;\n    } else {\n      return aValue > bValue ? 1 : aValue < bValue ? -1 : 0;\n    }\n  });\n}\n\n/**\n * Filter deals based on category\n */\nexport function filterDealsByCategory(deals: Deal[], category: string): Deal[] {\n  if (!category || category === 'All') {\n    return deals;\n  }\n  \n  return deals.filter(deal => deal.category === category);\n}\n\n/**\n * Filter deals by minimum discount percentage\n */\nexport function filterDealsByDiscount(deals: Deal[], minDiscount: number): Deal[] {\n  return deals.filter(deal => (deal.discountPercent || 0) >= minDiscount);\n}\n\n/**\n * Get unique categories from deals\n */\nexport function getUniqueCategories(deals: Deal[]): string[] {\n  const categories = new Set(deals.map(deal => deal.category));\n  return ['All', ...Array.from(categories).sort()];\n}\n\n/**\n * Get featured deals (marked as featured or high discount)\n */\nexport function getFeaturedDeals(deals: Deal[], limit: number = 20): Deal[] {\n  // First get explicitly featured deals\n  const featured = deals.filter(deal => deal.featured);\n  \n  if (featured.length >= limit) {\n    return featured.slice(0, limit);\n  }\n  \n  // If not enough featured deals, add high-discount deals\n  const nonFeatured = deals\n    .filter(deal => !deal.featured)\n    .filter(deal => (deal.discountPercent || 0) >= 30)\n    .sort((a, b) => (b.discountPercent || 0) - (a.discountPercent || 0));\n  \n  return [...featured, ...nonFeatured].slice(0, limit);\n}\n\n/**\n * Truncate text to specified length\n */\nexport function truncateText(text: string, maxLength: number): string {\n  if (text.length <= maxLength) {\n    return text;\n  }\n  \n  return text.slice(0, maxLength - 3) + '...';\n}\n\n/**\n * Get color class for deal card background\n */\nexport function getDealCardColor(index: number): string {\n  const colors = [\n    'bg-pink-100 border-pink-200',\n    'bg-blue-100 border-blue-200', \n    'bg-yellow-100 border-yellow-200'\n  ];\n  \n  return colors[index % colors.length];\n}\n\n/**\n * Check if a deal has a significant discount\n */\nexport function hasSignificantDiscount(deal: Deal, threshold: number = 20): boolean {\n  return (deal.discountPercent || 0) >= threshold;\n}\n\n/**\n * Get discount badge color based on percentage\n */\nexport function getDiscountBadgeColor(discountPercent: number): string {\n  if (discountPercent >= 50) {\n    return 'bg-red-600 text-white';\n  } else if (discountPercent >= 30) {\n    return 'bg-red-500 text-white';\n  } else if (discountPercent >= 15) {\n    return 'bg-orange-500 text-white';\n  } else {\n    return 'bg-gray-500 text-white';\n  }\n}\n\n/**\n * Validate deal data structure\n */\nexport function validateDeal(deal: any): deal is Deal {\n  return (\n    typeof deal?.id === 'string' &&\n    typeof deal?.title === 'string' &&\n    typeof deal?.price === 'number' && deal.price > 0 &&\n    typeof deal?.affiliateUrl === 'string' &&\n    ['PAAPI', 'SCRAPED', 'FALLBACK'].includes(deal?.dataSource)\n  );\n}\n\n/**\n * Search deals by title or description\n */\nexport function searchDeals(deals: Deal[], searchTerm: string): Deal[] {\n  if (!searchTerm.trim()) {\n    return deals;\n  }\n  \n  const term = searchTerm.toLowerCase().trim();\n  \n  return deals.filter(deal => \n    deal.title.toLowerCase().includes(term) ||\n    deal.description.toLowerCase().includes(term) ||\n    deal.category.toLowerCase().includes(term)\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}